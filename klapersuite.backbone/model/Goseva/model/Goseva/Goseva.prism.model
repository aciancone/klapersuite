
		dtmc

		// Constant for the fail state of a module
		const int fail = 0;
		
		// Constant for the success state of a module
		const int success = 1;
		
		const int fakeStart = 2;
		
		
		
	module M1 s_M1:[0..17] init fakeStart;
	
		
	[
	call_Workload_5_M1
] s_M1 = fakeStart ->
		1:(s_M1' = 3);
		
	[
	ret_Workload_5_M1
] s_M1 = success ->
		1:(s_M1' = fakeStart);
	
	[
	ret_Workload_5_M1
] s_M1 = fail ->
		1:(s_M1' = fail);

	
	
	
	
	
		
			
	// 
	[] s_M1 = 3
 ->
				
				
	1.0:(s_M1' = 5);

		
	

	
	


	
	
	
		
	

	
	


	
	
		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 5
 ->
				
	(5.3E-4*(1-7.1E-7)):(s_M1' = 6) +

	(0.1347*(1-7.1E-7)):(s_M1' = 7) +

	(3.0E-5*(1-7.1E-7)):(s_M1' = 11) +

	(0.06531*(1-7.1E-7)):(s_M1' = 12) +

	(0.00471*(1-7.1E-7)):(s_M1' = 13) +

	(0.18134*(1-7.1E-7)):(s_M1' = 15) +

	(0.60951*(1-7.1E-7)):(s_M1' = 16) +

	(0.00387*(1-7.1E-7)):(s_M1' = 17) +

				
	((((((((1-(5.3E-4*(1-7.1E-7)))-(0.1347*(1-7.1E-7)))-(3.0E-5*(1-7.1E-7)))-(0.06531*(1-7.1E-7)))-(0.00471*(1-7.1E-7)))-(0.18134*(1-7.1E-7)))-(0.60951*(1-7.1E-7)))-(0.00387*(1-7.1E-7))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 6
 ->
				
	(0.39194*(1-5.4E-7)):(s_M1' = 5) +

	(0.09139*(1-5.4E-7)):(s_M1' = 7) +

	(0.01114*(1-5.4E-7)):(s_M1' = 8) +

	(0.05387*(1-5.4E-7)):(s_M1' = 13) +

	(0.45166*(1-5.4E-7)):(s_M1' = 16) +

				
	(((((1-(0.39194*(1-5.4E-7)))-(0.09139*(1-5.4E-7)))-(0.01114*(1-5.4E-7)))-(0.05387*(1-5.4E-7)))-(0.45166*(1-5.4E-7))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 7
 ->
				
	(0.35396*(1-2.6E-7)):(s_M1' = 5) +

	(6.9E-4*(1-2.6E-7)):(s_M1' = 6) +

	(0.02593*(1-2.6E-7)):(s_M1' = 8) +

	(0.00395*(1-2.6E-7)):(s_M1' = 9) +

	(0.00559*(1-2.6E-7)):(s_M1' = 10) +

	(1.0E-5*(1-2.6E-7)):(s_M1' = 11) +

	(0.00468*(1-2.6E-7)):(s_M1' = 12) +

	(0.02698*(1-2.6E-7)):(s_M1' = 13) +

	(0.01639*(1-2.6E-7)):(s_M1' = 15) +

	(0.56123*(1-2.6E-7)):(s_M1' = 16) +

	(5.9E-4*(1-2.6E-7)):(s_M1' = 17) +

				
	(((((((((((1-(0.35396*(1-2.6E-7)))-(6.9E-4*(1-2.6E-7)))-(0.02593*(1-2.6E-7)))-(0.00395*(1-2.6E-7)))-(0.00559*(1-2.6E-7)))-(1.0E-5*(1-2.6E-7)))-(0.00468*(1-2.6E-7)))-(0.02698*(1-2.6E-7)))-(0.01639*(1-2.6E-7)))-(0.56123*(1-2.6E-7)))-(5.9E-4*(1-2.6E-7))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 8
 ->
				
	(0.06769*(1-0.0)):(s_M1' = 5) +

	(0.20704*(1-0.0)):(s_M1' = 6) +

	(0.63969*(1-0.0)):(s_M1' = 7) +

	(0.04927*(1-0.0)):(s_M1' = 11) +

	(4.5E-4*(1-0.0)):(s_M1' = 12) +

	(0.03586*(1-0.0)):(s_M1' = 15) +

				
	((((((1-(0.06769*(1-0.0)))-(0.20704*(1-0.0)))-(0.63969*(1-0.0)))-(0.04927*(1-0.0)))-(4.5E-4*(1-0.0)))-(0.03586*(1-0.0))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 9
 ->
				
	(0.38235*(1-6.58E-6)):(s_M1' = 5) +

	(0.08589*(1-6.58E-6)):(s_M1' = 7) +

	(0.38235*(1-6.58E-6)):(s_M1' = 16) +

	(0.14941*(1-6.58E-6)):(s_M1' = 17) +

				
	((((1-(0.38235*(1-6.58E-6)))-(0.08589*(1-6.58E-6)))-(0.38235*(1-6.58E-6)))-(0.14941*(1-6.58E-6))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 10
 ->
				
	(0.55386*(1-4.61E-6)):(s_M1' = 5) +

	(0.04688*(1-4.61E-6)):(s_M1' = 6) +

	(0.17313*(1-4.61E-6)):(s_M1' = 7) +

	(1.0E-5*(1-4.61E-6)):(s_M1' = 8) +

	(0.03469*(1-4.61E-6)):(s_M1' = 12) +

	(0.19143*(1-4.61E-6)):(s_M1' = 16) +

				
	((((((1-(0.55386*(1-4.61E-6)))-(0.04688*(1-4.61E-6)))-(0.17313*(1-4.61E-6)))-(1.0E-5*(1-4.61E-6)))-(0.03469*(1-4.61E-6)))-(0.19143*(1-4.61E-6))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 11
 ->
				
	(0.03582*(1-0.0)):(s_M1' = 5) +

	(0.59501*(1-0.0)):(s_M1' = 6) +

	(0.1684*(1-0.0)):(s_M1' = 7) +

	(0.18777*(1-0.0)):(s_M1' = 8) +

	(0.00129*(1-0.0)):(s_M1' = 9) +

	(0.01171*(1-0.0)):(s_M1' = 15) +

				
	((((((1-(0.03582*(1-0.0)))-(0.59501*(1-0.0)))-(0.1684*(1-0.0)))-(0.18777*(1-0.0)))-(0.00129*(1-0.0)))-(0.01171*(1-0.0))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 12
 ->
				
	(0.0068*(1-0.0)):(s_M1' = 5) +

	(0.02673*(1-0.0)):(s_M1' = 6) +

	(0.96213*(1-0.0)):(s_M1' = 7) +

	(0.00112*(1-0.0)):(s_M1' = 8) +

	(9.3E-4*(1-0.0)):(s_M1' = 13) +

	(0.00185*(1-0.0)):(s_M1' = 15) +

	(4.4E-4*(1-0.0)):(s_M1' = 16) +

				
	(((((((1-(0.0068*(1-0.0)))-(0.02673*(1-0.0)))-(0.96213*(1-0.0)))-(0.00112*(1-0.0)))-(9.3E-4*(1-0.0)))-(0.00185*(1-0.0)))-(4.4E-4*(1-0.0))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 13
 ->
				
	(0.0592*(1-0.0)):(s_M1' = 5) +

	(0.00225*(1-0.0)):(s_M1' = 6) +

	(0.20549*(1-0.0)):(s_M1' = 7) +

	(0.0065*(1-0.0)):(s_M1' = 8) +

	(0.0052*(1-0.0)):(s_M1' = 12) +

	(0.00614*(1-0.0)):(s_M1' = 15) +

	(0.69656*(1-0.0)):(s_M1' = 16) +

	(0.01866*(1-0.0)):(s_M1' = 17) +

				
	((((((((1-(0.0592*(1-0.0)))-(0.00225*(1-0.0)))-(0.20549*(1-0.0)))-(0.0065*(1-0.0)))-(0.0052*(1-0.0)))-(0.00614*(1-0.0)))-(0.69656*(1-0.0)))-(0.01866*(1-0.0))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 14
 ->
				
	(0.06525*(1-0.0)):(s_M1' = 5) +

	(0.01021*(1-0.0)):(s_M1' = 6) +

	(0.75907*(1-0.0)):(s_M1' = 7) +

	(0.0052*(1-0.0)):(s_M1' = 8) +

	(0.14369*(1-0.0)):(s_M1' = 11) +

	(0.00681*(1-0.0)):(s_M1' = 12) +

	(0.00349*(1-0.0)):(s_M1' = 13) +

	(0.0034*(1-0.0)):(s_M1' = 15) +

	(0.00288*(1-0.0)):(s_M1' = 16) +

				
	(((((((((1-(0.06525*(1-0.0)))-(0.01021*(1-0.0)))-(0.75907*(1-0.0)))-(0.0052*(1-0.0)))-(0.14369*(1-0.0)))-(0.00681*(1-0.0)))-(0.00349*(1-0.0)))-(0.0034*(1-0.0)))-(0.00288*(1-0.0))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 15
 ->
				
	(0.05807*(1-2.8E-7)):(s_M1' = 5) +

	(8.8E-4*(1-2.8E-7)):(s_M1' = 6) +

	(0.0568*(1-2.8E-7)):(s_M1' = 7) +

	(0.88372*(1-2.8E-7)):(s_M1' = 16) +

	(5.3E-4*(1-2.8E-7)):(s_M1' = 17) +

				
	(((((1-(0.05807*(1-2.8E-7)))-(8.8E-4*(1-2.8E-7)))-(0.0568*(1-2.8E-7)))-(0.88372*(1-2.8E-7)))-(5.3E-4*(1-2.8E-7))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 16
 ->
				
	(0.09972*(1-1.1E-7)):(s_M1' = 5) +

	(1.3E-4*(1-1.1E-7)):(s_M1' = 6) +

	(0.02055*(1-1.1E-7)):(s_M1' = 7) +

	(2.0E-4*(1-1.1E-7)):(s_M1' = 8) +

	(0.85341*(1-1.1E-7)):(s_M1' = 13) +

	(2.0E-5*(1-1.1E-7)):(s_M1' = 14) +

	(0.02595*(1-1.1E-7)):(s_M1' = 15) +

	(2.0E-5*(1-1.1E-7)):(s_M1' = 17) +

				
	((((((((1-(0.09972*(1-1.1E-7)))-(1.3E-4*(1-1.1E-7)))-(0.02055*(1-1.1E-7)))-(2.0E-4*(1-1.1E-7)))-(0.85341*(1-1.1E-7)))-(2.0E-5*(1-1.1E-7)))-(0.02595*(1-1.1E-7)))-(2.0E-5*(1-1.1E-7))):(s_M1' = fail);

		
	

	
	


	
	
		
			
	// 
	[] s_M1 = 17
 ->
				
	(0.07064*(1-1.28E-6)):(s_M1' = 5) +

	(0.00572*(1-1.28E-6)):(s_M1' = 6) +

	(0.08478*(1-1.28E-6)):(s_M1' = 7) +

	(0.02827*(1-1.28E-6)):(s_M1' = 8) +

	(0.00248*(1-1.28E-6)):(s_M1' = 10) +

	(0.00613*(1-1.28E-6)):(s_M1' = 11) +

	(0.01332*(1-1.28E-6)):(s_M1' = 12) +

	(0.02698*(1-1.28E-6)):(s_M1' = 13) +

	(0.00497*(1-1.28E-6)):(s_M1' = 14) +

	(0.61022*(1-1.28E-6)):(s_M1' = 15) +

	(0.04247*(1-1.28E-6)):(s_M1' = 16) +

	(0.10402*(1-1.28E-6)):(s_M1' = 4) +

				
	((((((((((((1-(0.07064*(1-1.28E-6)))-(0.00572*(1-1.28E-6)))-(0.08478*(1-1.28E-6)))-(0.02827*(1-1.28E-6)))-(0.00248*(1-1.28E-6)))-(0.00613*(1-1.28E-6)))-(0.01332*(1-1.28E-6)))-(0.02698*(1-1.28E-6)))-(0.00497*(1-1.28E-6)))-(0.61022*(1-1.28E-6)))-(0.04247*(1-1.28E-6)))-(0.10402*(1-1.28E-6))):(s_M1' = fail);

		
	

	
	


	
	[] s_M1 = 4 -> 1:(s_M1' = success);

	
	
		[] s_M1 = fakeStart -> 1:(s_M1' = fakeStart);
	
	
	[] s_M1 = fail -> 1:(s_M1' = fail);

	endmodule

	module Workload s_Workload:[0..6] init fakeStart;
	
		[] s_Workload = fakeStart -> 1:(s_Workload' = 3);
	
	
	
	
	
		
			
	// 
	[] s_Workload = 3
 ->
				
				
	1.0:(s_Workload' = 5);

		
	

	
	


	
	
	
		
	

	
	


	
	
		
	

	
	
	[
	call_Workload_5_M1
] s_Workload = 5 ->
		1:(s_Workload' = 6);
		
	[
	ret_Workload_5_M1
] s_Workload = 6 & s_M1 = success ->
		1:(s_Workload' = 4);
			
	[
	ret_Workload_5_M1
] s_Workload = 6 & s_M1 = fail ->
		1:(s_Workload' = fail);



	
	[] s_Workload = 4 -> 1:(s_Workload' = success);

	
	
		[] s_Workload = success -> 1:(s_Workload' = success);
	
	
	[] s_Workload = fail -> 1:(s_Workload' = fail);

	endmodule

	